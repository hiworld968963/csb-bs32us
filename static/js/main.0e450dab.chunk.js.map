{"version":3,"sources":["index.js"],"names":["TILES","number","color","App","props","state","server_seed","amount","chain","this","i","push","crypto","createHash","update","length","digest","className","value","onChange","e","setState","target","map","seed","index","hash","createHmac","n","parseInt","tile","find","t","style","slice","toUpperCase","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"mNAMMA,EAAQ,CACZ,CAAEC,OAAQ,EAAGC,MAAO,SACpB,CAAED,OAAQ,GAAIC,MAAO,SACrB,CAAED,OAAQ,EAAGC,MAAO,OACpB,CAAED,OAAQ,GAAIC,MAAO,SACrB,CAAED,OAAQ,EAAGC,MAAO,OACpB,CAAED,OAAQ,EAAGC,MAAO,SACpB,CAAED,OAAQ,EAAGC,MAAO,OACpB,CAAED,OAAQ,EAAGC,MAAO,SACpB,CAAED,OAAQ,EAAGC,MAAO,OACpB,CAAED,OAAQ,GAAIC,MAAO,SACrB,CAAED,OAAQ,EAAGC,MAAO,OACpB,CAAED,OAAQ,GAAIC,MAAO,SACrB,CAAED,OAAQ,EAAGC,MAAO,OACpB,CAAED,OAAQ,GAAIC,MAAO,SACrB,CAAED,OAAQ,EAAGC,MAAO,QAGhBC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,YAAa,GACbC,OAAQ,IAJO,CAMlB,C,0CACD,WAKE,IALQ,IAAD,OAGDC,EAAQ,CAACC,KAAKJ,MAAMC,aAEjBI,EAAI,EAAGA,EAAID,KAAKJ,MAAME,OAAQG,IACrCF,EAAMG,KACJC,IACGC,WAAW,UACXC,OAAON,EAAMA,EAAMO,OAAS,IAC5BC,OAAO,QAQd,OACE,sBAAKC,UAAU,MAAf,UACE,oEACA,uBACEC,MAAOT,KAAKJ,MAAMC,YAClBa,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAEf,YAAac,EAAEE,OAAOJ,OAA7C,IAEZ,uBACA,uBACA,8EACA,uBACEA,MAAOT,KAAKJ,MAAME,OAClBY,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAEd,OAAQa,EAAEE,OAAOJ,OAAxC,IAGZ,uBACA,+CAEET,KAAKJ,MAAMC,aAAiD,KAAlCG,KAAKJ,MAAMC,YAAYS,OAKjD,kCACE,gCACE,+BACE,sCACA,sCACA,mEAGJ,gCACGP,EAAMe,KAAI,SAACC,EAAMC,GAChB,IAAMC,EAAOd,IACVe,WAAW,SAAUH,GACrBV,OArCb,oEAsCaE,OAAO,OAGJY,EAAIC,SAASH,EAAM,IAAM,GAEzBI,EAAO9B,EAAM+B,MAAK,SAACC,GAAD,OAAOA,EAAE/B,SAAW2B,CAApB,IAExB,OACE,+BACE,qBAAIK,MAAO,CAAE/B,MAAO4B,EAAK5B,OAAzB,UACG4B,EAAK5B,MAAMgC,MAAM,EAAG,GAAGC,cACtBL,EAAK5B,MAAMgC,MAAM,GAAI,IACtBN,KAEH,6BAAKJ,IACL,6BAAKE,MAGV,SAnCL,oBAAIO,MAAO,CAAE/B,MAAO,OAApB,6DAyCP,K,GAtFekC,IAAMC,WAyFlBC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAACvC,EAAD,IAASmC,E","file":"static/js/main.0e450dab.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport crypto from \"crypto\";\n\nimport \"./styles.css\";\n\nconst TILES = [\n  { number: 0, color: \"white\" },\n  { number: 11, color: \"black\" },\n  { number: 5, color: \"red\" },\n  { number: 10, color: \"black\" },\n  { number: 6, color: \"red\" },\n  { number: 9, color: \"black\" },\n  { number: 7, color: \"red\" },\n  { number: 8, color: \"black\" },\n  { number: 1, color: \"red\" },\n  { number: 14, color: \"black\" },\n  { number: 2, color: \"red\" },\n  { number: 13, color: \"black\" },\n  { number: 3, color: \"red\" },\n  { number: 12, color: \"black\" },\n  { number: 4, color: \"red\" }\n];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      server_seed: \"\",\n      amount: 10\n    };\n  }\n  render() {\n    // an example with 10 seeds\n\n    const chain = [this.state.server_seed];\n\n    for (let i = 0; i < this.state.amount; i++) {\n      chain.push(\n        crypto\n          .createHash(\"sha256\")\n          .update(chain[chain.length - 1])\n          .digest(\"hex\")\n      );\n    }\n\n    // the hash of bitcoin block 570120 (https://medium.com/@blazedev/blaze-com-double-seeding-event-d3290ef13454)\n    const clientSeed =\n      \"0000000000000000002aeb06364afc13b3c4d52767e8c91db8cdb39d8f71e8dd\";\n\n    return (\n      <div className=\"App\">\n        <h3>Enter the server seed of your game</h3>\n        <input\n          value={this.state.server_seed}\n          onChange={(e) => this.setState({ server_seed: e.target.value })}\n        />\n        <br />\n        <br />\n        <h3>Enter the # of games to view before this one</h3>\n        <input\n          value={this.state.amount}\n          onChange={(e) => this.setState({ amount: e.target.value })}\n        />\n\n        <hr />\n        <h1>Double rolls:</h1>\n\n        {!this.state.server_seed || this.state.server_seed.length !== 64 ? (\n          <h3 style={{ color: \"red\" }}>\n            Please enter a server seed to view this table\n          </h3>\n        ) : (\n          <table>\n            <thead>\n              <tr>\n                <th>Roll</th>\n                <th>Seed</th>\n                <th>Hash (hmac with client seed)</th>\n              </tr>\n            </thead>\n            <tbody>\n              {chain.map((seed, index) => {\n                const hash = crypto\n                  .createHmac(\"sha256\", seed)\n                  .update(clientSeed)\n                  .digest(\"hex\");\n\n                // roulette number from 0-15\n                const n = parseInt(hash, 16) % 15;\n\n                const tile = TILES.find((t) => t.number === n);\n\n                return (\n                  <tr>\n                    <td style={{ color: tile.color }}>\n                      {tile.color.slice(0, 1).toUpperCase() +\n                        tile.color.slice(1)}{\" \"}\n                      {n}\n                    </td>\n                    <td>{seed}</td>\n                    <td>{hash}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}